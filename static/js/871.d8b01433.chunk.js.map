{"version":3,"file":"static/js/871.d8b01433.chunk.js","mappings":"yNAiCA,UA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACCC,EAAAA,EAAAA,IAAaP,GADd,OACZQ,EADY,OAElBJ,EAAWI,GAFO,2CAAH,qDAIjBF,GACD,GAAE,CAACN,KAGF,wBACGG,EAAQM,OAAS,EACdN,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,IACD,WAGT,C,sLC/BKG,EAAW,gCACXC,EAAU,mCAGHC,EAAa,mCAAG,sGACNC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IADzC,cACrBG,EADqB,gBAETA,EAAOC,OAFE,cAErBC,EAFqB,yBAGpBA,EAAIC,SAHgB,2CAAH,qDAMbC,EAAY,mCAAG,WAAMtB,GAAN,yFACLiB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBd,EAArB,oBAAwCe,IADxC,cACpBG,EADoB,gBAEHA,EAAOC,OAFJ,cAEpBI,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZC,EAAW,mCAAG,WAAMC,GAAN,yFACJR,MAAM,GAAD,OACrBH,EADqB,gCACWC,EADX,kBAC4BU,IAF7B,cACnBP,EADmB,gBAIFA,EAAOC,OAJL,cAInBI,EAJmB,yBAKlBA,EAASF,SALS,2CAAH,sDAQXK,EAAS,mCAAG,WAAM1B,GAAN,yFACFiB,MAAM,GAAD,OACrBH,EADqB,iBACJd,EADI,4BACuBe,IAF1B,cACjBG,EADiB,gBAIAA,EAAOC,OAJP,cAIjBI,EAJiB,yBAKhBA,EAASI,MALO,2CAAH,sDAQTpB,EAAY,mCAAG,WAAMP,GAAN,yFACLiB,MAAM,GAAD,OACrBH,EADqB,iBACJd,EADI,4BACuBe,IAFvB,cACpBG,EADoB,gBAIHA,EAAOC,OAJJ,cAIpBI,EAJoB,yBAKnBA,EAASF,SALU,2CAAH,qD,sBChCzB,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["pages/Reviews/Reviews.jsx","servise/movieAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { movieReviews } from '../../servise/movieAPI';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const data = await movieReviews(movieId);\n      setReviews(data);\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length > 0\n        ? reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        : 'nothing'}\n    </ul>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.array,\n};","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bd976601ef505d915c39fc1c350b9425';\n\n\nexport const movieTrending = async () => {\n  const movies = await fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n  const res = await movies.json();\n  return res.results;\n};\n\nexport const movieDetails = async movieId => {\n  const movies = await fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n  const response = await movies.json();\n  return response;\n};\n\nexport const movieSearch = async query => {\n  const movies = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const response = await movies.json();\n  return response.results;\n};\n\nexport const movieCast = async movieId => {\n  const movies = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await movies.json();\n  return response.cast;\n};\n\nexport const movieReviews = async movieId => {\n  const movies = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await movies.json();\n  return response.results;\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovies","movieReviews","data","length","map","id","author","content","BASE_URL","API_KEY","movieTrending","fetch","movies","json","res","results","movieDetails","response","movieSearch","query","movieCast","cast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}