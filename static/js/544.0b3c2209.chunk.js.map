{"version":3,"file":"static/js/544.0b3c2209.chunk.js","mappings":"qKAuBA,IAnBkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GACCA,EAAKG,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACd,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA7C,SACGI,KAFID,EAMZ,KAGR,C,kHCKD,UArBa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGhBJ,GAAQ,OAAII,IAHI,gDAKhBC,QAAQC,IAAR,MALgB,yDAAH,qDAQjBJ,GACD,GAAE,KAGD,2BACE,SAAC,IAAD,CAAWZ,KAAMA,KAGtB,C,sLCxBKiB,EAAW,gCACXC,EAAU,mCAGHL,EAAa,mCAAG,sGACNM,MAAM,GAAD,OAAIF,EAAJ,sCAA0CC,IADzC,cACrBE,EADqB,gBAETA,EAAOC,OAFE,cAErBC,EAFqB,yBAGpBA,EAAIC,SAHgB,2CAAH,qDAMbC,EAAY,mCAAG,WAAMC,GAAN,yFACLN,MAAM,GAAD,OAAIF,EAAJ,iBAAqBQ,EAArB,oBAAwCP,IADxC,cACpBE,EADoB,gBAEHA,EAAOC,OAFJ,cAEpBK,EAFoB,yBAGnBA,GAHmB,2CAAH,sDAMZC,EAAW,mCAAG,WAAMC,GAAN,yFACJT,MAAM,GAAD,OACrBF,EADqB,gCACWC,EADX,kBAC4BU,IAF7B,cACnBR,EADmB,gBAIFA,EAAOC,OAJL,cAInBK,EAJmB,yBAKlBA,EAASH,SALS,2CAAH,sDAQXM,EAAS,mCAAG,WAAMJ,GAAN,yFACFN,MAAM,GAAD,OACrBF,EADqB,iBACJQ,EADI,4BACuBP,IAF1B,cACjBE,EADiB,gBAIAA,EAAOC,OAJP,cAIjBK,EAJiB,yBAKhBA,EAASI,MALO,2CAAH,sDAQTC,EAAY,mCAAG,WAAMN,GAAN,yFACLN,MAAM,GAAD,OACrBF,EADqB,iBACJQ,EADI,4BACuBP,IAFvB,cACpBE,EADoB,gBAIHA,EAAOC,OAJJ,cAIpBK,EAJoB,yBAKnBA,EAASH,SALU,2CAAH,qD,sBChCzB,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/MoviesList.jsx","pages/Home/Home.jsx","servise/movieAPI.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nconst MovieList = ({ item }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {item &&\n        item.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  item: PropTypes.array,\n  NavLink: PropTypes.element,\n};","import { movieTrending } from '../../servise/movieAPI';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from '../../components/MoviesList';\n\nconst Home = () => {\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await movieTrending();\n        setItem([...data]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <MovieList item={item} />\n    </main>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  item: PropTypes.array,\n  MovieList: PropTypes.element,\n};","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bd976601ef505d915c39fc1c350b9425';\n\n\nexport const movieTrending = async () => {\n  const movies = await fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n  const res = await movies.json();\n  return res.results;\n};\n\nexport const movieDetails = async movieId => {\n  const movies = await fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n  const response = await movies.json();\n  return response;\n};\n\nexport const movieSearch = async query => {\n  const movies = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  const response = await movies.json();\n  return response.results;\n};\n\nexport const movieCast = async movieId => {\n  const movies = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  const response = await movies.json();\n  return response.cast;\n};\n\nexport const movieReviews = async movieId => {\n  const movies = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  const response = await movies.json();\n  return response.results;\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["item","location","useLocation","map","id","original_title","to","state","from","useState","setItem","useEffect","fetchMovies","movieTrending","data","console","log","BASE_URL","API_KEY","fetch","movies","json","res","results","movieDetails","movieId","response","movieSearch","query","movieCast","cast","movieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}